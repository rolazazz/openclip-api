import uvicorn
from fastapi import Depends, FastAPI, Request, UploadFile
from fastapi.responses import  JSONResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel, Field
from app import ClipInferlessPythonModel, E5InferlessPythonModel




clipApp = ClipInferlessPythonModel()
clipApp.initialize()
e5App = E5InferlessPythonModel()
e5App.initialize()

api = FastAPI()

api.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

class Inputs(BaseModel):
    """
    Class for input endpoint /embeddings.

    Args:
        text (str): string text to extract the embeddings from.
        image (str): image base64 encoded.
    """
    text: str | None = None
    image: str | None = None
    model_config = {
        "json_schema_extra": {
            "examples": [
                {
                    "text": "red sofa",
                    "image": ""
                }
            ]
        }
    }

class Output(BaseModel):
	embeddings: list[list[float]]
	model: str
	device: str
	duration: float
	model_config = {
        "json_schema_extra": {
            "examples": [
				{
					"model": "OpenCLIP-ViT-B-32-laion2B",
					"device": "cuda",
					"embeddings": [
						[
							0.26967310905456543,
							-0.19629383087158203,
							0.10806117951869965,
							0.25855106115341187,
							-0.05953788757324219,
							0.5355714559555054,
							-0.05953924357891083,
							0.023694097995758057,
							0.11008653044700623,
							-0.2985125780105591,
							0.4201275706291199,
							0.09161196649074554,
							-0.41923442482948303,
							-0.2837238311767578,
							0.04765297472476959,
							0.14271420240402222,
							-0.7198173403739929,
							-0.5605003833770752,
							0.7333842515945435,
							0.7060641646385193,
							-0.38706645369529724,
							0.5409317016601562,
							0.7185027599334717,
							0.525790274143219,
							-0.2605142593383789,
							1.1469364166259766,
							0.00614108145236969,
							-0.7464540600776672,
							-0.7701447010040283,
							-0.33788779377937317,
							0.05786824971437454,
							0.6535631418228149,
							-0.36279475688934326,
							-0.05961650609970093,
							-0.09673228114843369,
							-0.35666021704673767,
							-0.02537265419960022,
							0.675527036190033,
							0.1373080313205719,
							0.12293528020381927,
							0.07960033416748047,
							0.19682325422763824,
							-1.1330974102020264,
							0.27131187915802,
							0.11588051170110703,
							-0.018592119216918945,
							0.11469042301177979,
							0.48694518208503723,
							-0.21969369053840637,
							0.8409187197685242,
							0.02976435422897339,
							-0.474162220954895,
							0.5198808908462524,
							0.08816570043563843,
							-0.17737558484077454,
							0.33596134185791016,
							-0.4808351397514343,
							0.4156927466392517,
							-0.3971465229988098,
							0.21132980287075043,
							0.2988783121109009,
							-0.7675207853317261,
							-0.5498239398002625,
							-0.00035515427589416504,
							0.08508384227752686,
							-0.13584542274475098,
							-0.3553459048271179,
							0.5245505571365356,
							0.34480345249176025,
							-0.17410944402217865,
							-0.17414523661136627,
							0.6838314533233643,
							-0.3102785348892212,
							-0.6156041622161865,
							-0.32036763429641724,
							-0.541862964630127,
							0.5202553868293762,
							0.2805865406990051,
							-0.14074315130710602,
							-0.710466206073761,
							-0.04373262822628021,
							0.12282121181488037,
							0.49304574728012085,
							-0.1429520547389984,
							-0.4691653847694397,
							0.13785907626152039,
							-0.3797130584716797,
							-0.1328626126050949,
							1.035062551498413,
							0.5595197081565857,
							-0.18395796418190002,
							-0.16661325097084045,
							0.3768337666988373,
							0.18668565154075623,
							0.28840160369873047,
							-0.47491347789764404,
							0.23009923100471497,
							0.013089358806610107,
							-0.32110610604286194,
							-0.20365795493125916,
							-0.2682846486568451,
							0.4632604718208313,
							-0.1180020123720169,
							0.1336558312177658,
							-0.41595548391342163,
							0.3383335471153259,
							-0.2168775498867035,
							-0.38609981536865234,
							0.20617443323135376,
							0.05086700618267059,
							-0.29115521907806396,
							-0.11047643423080444,
							0.17662560939788818,
							0.17212244868278503,
							0.06317627429962158,
							0.36640071868896484,
							-0.6961732506752014,
							0.5278662443161011,
							-0.28259724378585815,
							0.16322027146816254,
							0.241139218211174,
							0.11995376646518707,
							0.1043066531419754,
							-0.24350599944591522,
							0.3560776710510254,
							0.030245766043663025,
							0.052173927426338196,
							-0.3096845746040344,
							0.22615425288677216,
							-0.10701572895050049,
							0.22287613153457642,
							0.4931943714618683,
							-0.6362138986587524,
							0.11080926656723022,
							-0.5055769681930542,
							-0.4657101631164551,
							0.09981781244277954,
							0.5159097909927368,
							-0.14539533853530884,
							-0.02978341281414032,
							0.3400415778160095,
							-0.1488056778907776,
							-0.1822667419910431,
							0.5392040014266968,
							-0.03610672056674957,
							0.5940779447555542,
							-0.32855796813964844,
							0.3816523551940918,
							0.3895915448665619,
							0.34080812335014343,
							0.1661139726638794,
							0.07117047905921936,
							4.505123138427734,
							-0.2064782828092575,
							0.8136132955551147,
							0.16108547151088715,
							-0.684398889541626,
							-0.07782953977584839,
							0.10892289876937866,
							-0.34528157114982605,
							-0.0012600868940353394,
							0.44817379117012024,
							0.4433562159538269,
							0.9529452323913574,
							0.01324319839477539,
							0.39404910802841187,
							-0.3775598406791687,
							-0.9999898672103882,
							0.024109795689582825,
							0.242597296833992,
							-0.1577182561159134,
							0.12576016783714294,
							0.7717903852462769,
							0.0024025291204452515,
							-0.10030552744865417,
							-2.2918176651000977,
							0.06019879877567291,
							-0.40086129307746887,
							-0.8822629451751709,
							-0.24124643206596375,
							0.5142841339111328,
							-0.15766674280166626,
							-0.011212743818759918,
							-0.03390006721019745,
							-0.013269580900669098,
							0.48163342475891113,
							-0.11416654288768768,
							-0.05226755142211914,
							-0.3792227506637573,
							-0.3364051282405853,
							0.7395504713058472,
							-0.37058356404304504,
							-0.1890491098165512,
							0.2829541265964508,
							-0.9112123250961304,
							-0.31873205304145813,
							-0.39621710777282715,
							-0.5308996438980103,
							0.6063231825828552,
							0.521697998046875,
							-0.6746301054954529,
							0.5708546042442322,
							0.7768294215202332,
							-0.25159409642219543,
							0.22824737429618835,
							-0.560835599899292,
							0.4257805645465851,
							-0.01743219792842865,
							-0.5830498933792114,
							0.10436028242111206,
							-0.17570464313030243,
							-0.17997562885284424,
							0.11811995506286621,
							0.03263545036315918,
							-0.13128501176834106,
							-0.43396759033203125,
							0.21165776252746582,
							-0.27914372086524963,
							0.07325327396392822,
							0.948705792427063,
							-0.2371315360069275,
							0.20053505897521973,
							0.30510905385017395,
							-0.5307984948158264,
							-0.4180225431919098,
							-0.29820048809051514,
							0.28204870223999023,
							0.12604108452796936,
							-0.06554785370826721,
							0.5160379409790039,
							-0.3191807270050049,
							-0.23010554909706116,
							-0.28802382946014404,
							-0.5357503890991211,
							-0.13858819007873535,
							0.031193405389785767,
							0.13370198011398315,
							-0.1686195284128189,
							-0.5516578555107117,
							0.019131362438201904,
							1.0582648515701294,
							1.183927297592163,
							0.38675978779792786,
							0.10694435238838196,
							-0.08835369348526001,
							0.030027199536561966,
							-0.35457485914230347,
							-0.8829828500747681,
							0.1125066876411438,
							0.5711995363235474,
							-1.0644385814666748,
							-0.21323050558567047,
							0.2982490062713623,
							-0.17439620196819305,
							-0.14021478593349457,
							-0.17480960488319397,
							0.03334323316812515,
							-0.5832542181015015,
							0.2529600262641907,
							-0.4317605495452881,
							-0.010795965790748596,
							-0.7715315818786621,
							-0.41325950622558594,
							-0.10250730812549591,
							0.5337493419647217,
							-0.2924965023994446,
							0.13796478509902954,
							0.09268711507320404,
							-0.1640816330909729,
							-0.3638211488723755,
							-0.3199838399887085,
							0.47040510177612305,
							0.06241209805011749,
							0.6551938056945801,
							-0.22701680660247803,
							0.6928402185440063,
							0.061798274517059326,
							-0.5390260815620422,
							0.22215425968170166,
							0.06831207126379013,
							0.25122031569480896,
							0.5580642223358154,
							-0.1421605348587036,
							-0.009841129183769226,
							-0.024777516722679138,
							-0.21147669851779938,
							-0.3114350438117981,
							-0.13686424493789673,
							-0.37172403931617737,
							0.22296199202537537,
							0.5505006909370422,
							-0.14027690887451172,
							0.21750572323799133,
							0.3116433024406433,
							0.251209020614624,
							-0.06975895166397095,
							-0.06361386179924011,
							-0.24408680200576782,
							-0.40494969487190247,
							0.35966795682907104,
							1.1527066230773926,
							0.5487239956855774,
							0.1551741510629654,
							0.128999263048172,
							0.02457563579082489,
							-0.012809939682483673,
							0.04559828341007233,
							-4.488420486450195,
							0.06578096747398376,
							-0.10882245004177094,
							0.03507794439792633,
							0.3071342706680298,
							-0.16122254729270935,
							0.28143712878227234,
							-0.25478002429008484,
							0.4206271171569824,
							0.05784307420253754,
							-0.376163125038147,
							0.5709298849105835,
							-0.05123800039291382,
							-0.4759123623371124,
							-0.17203563451766968,
							0.08017566800117493,
							-0.05600838363170624,
							-0.5890640020370483,
							0.030981339514255524,
							-0.4607996344566345,
							-0.3700152635574341,
							-0.30643218755722046,
							0.6640300750732422,
							0.14261791110038757,
							0.49908125400543213,
							-0.31059208512306213,
							-0.15869230031967163,
							0.24053995311260223,
							-0.8324348330497742,
							-0.6240692734718323,
							0.19677498936653137,
							-0.357515424489975,
							-0.3341016173362732,
							0.4415310025215149,
							0.03751674294471741,
							0.04632037878036499,
							0.07177204638719559,
							-0.016671448945999146,
							-0.7786727547645569,
							-0.26802483201026917,
							0.15506893396377563,
							-1.8996652364730835,
							-0.03848476707935333,
							0.8568485975265503,
							0.27313506603240967,
							0.1279546022415161,
							0.28968584537506104,
							0.16182303428649902,
							0.08865366876125336,
							0.2619473338127136,
							-0.3131859302520752,
							0.12623070180416107,
							0.2525978982448578,
							-0.029130592942237854,
							0.8191688060760498,
							-0.21515493094921112,
							0.3075956702232361,
							-0.6063475608825684,
							-0.09576371312141418,
							0.16002555191516876,
							0.053280770778656006,
							0.022009462118148804,
							-0.04463754594326019,
							0.1877601146697998,
							0.23778432607650757,
							0.06096785515546799,
							0.003992229700088501,
							0.1852150559425354,
							-0.12599053978919983,
							-0.5276607275009155,
							0.15130563080310822,
							0.15024659037590027,
							0.2008703351020813,
							-0.018203724175691605,
							0.586365282535553,
							0.06536301970481873,
							-0.4439142346382141,
							0.48772695660591125,
							-0.5029565095901489,
							0.32554054260253906,
							0.19592037796974182,
							-0.8410639762878418,
							0.21680748462677002,
							-0.5157427191734314,
							0.22617891430854797,
							0.3322479724884033,
							-1.0052707195281982,
							-0.03234699368476868,
							-0.7480798959732056,
							-0.03110349178314209,
							-0.16047140955924988,
							-0.08210015296936035,
							0.06887783110141754,
							-0.33709028363227844,
							0.24996915459632874,
							0.6251619458198547,
							-0.0971609354019165,
							-0.42189162969589233,
							-0.3010154366493225,
							0.06705272942781448,
							0.284790575504303,
							0.029567793011665344,
							0.036393940448760986,
							-0.42192360758781433,
							-0.4007384181022644,
							0.8476446866989136,
							0.1340653896331787,
							0.25482165813446045,
							0.2655836045742035,
							-0.054630398750305176,
							-0.04998873174190521,
							0.6126742959022522,
							0.20337198674678802,
							-0.0019861310720443726,
							-0.12219229340553284,
							0.20074579119682312,
							-0.17541725933551788,
							0.16921770572662354,
							0.385684072971344,
							0.06647248566150665,
							0.3484101891517639,
							0.7152026891708374,
							0.25924763083457947,
							-0.18393489718437195,
							1.1394822597503662,
							-0.23497624695301056,
							0.3745670020580292,
							-0.5633403658866882,
							0.022678636014461517,
							0.8367393612861633,
							-0.3865526020526886,
							0.4393969178199768,
							0.6806098818778992,
							0.04221668839454651,
							-0.045855969190597534,
							-0.6924811005592346,
							-0.3583199381828308,
							0.5439451336860657,
							-0.30102163553237915,
							0.2632569372653961,
							0.5525392293930054,
							-0.9078248739242554,
							-0.29226982593536377,
							-0.07002942264080048,
							-0.2611127495765686,
							-0.005286574363708496,
							-0.08325973153114319,
							-0.24810023605823517,
							0.022732436656951904,
							-0.14458146691322327,
							-0.0809149518609047,
							-0.0980147272348404,
							0.14430385828018188,
							-0.7212401628494263,
							0.1224566251039505,
							-0.03069058060646057,
							-0.08994603902101517,
							-0.15091678500175476,
							-0.11419123411178589,
							-0.6131466627120972,
							0.06052243709564209,
							0.19113671779632568,
							0.139810711145401,
							0.6885255575180054,
							-0.5355791449546814,
							0.1153382956981659,
							-0.09459131956100464,
							0.09678841382265091,
							-1.1298938989639282,
							-0.10881966352462769,
							-0.10679545998573303,
							-0.3726502060890198,
							-0.2923938035964966,
							0.2957291901111603,
							0.10975628346204758,
							0.4821810722351074,
							0.228399395942688,
							-0.04692642390727997,
							0.05641333758831024,
							-0.035428598523139954,
							0.08022958040237427,
							-0.4742199182510376,
							-0.3238269090652466,
							-1.1979252099990845,
							0.3631378412246704,
							-0.08870255202054977,
							0.4353117346763611,
							0.5626085996627808,
							0.28763145208358765,
							-0.20725053548812866,
							-0.6836959719657898,
							0.09808076918125153,
							-0.3577180504798889,
							0.31912532448768616,
							0.18943503499031067,
							-0.2523994445800781,
							0.2805694341659546,
							0.5850979089736938,
							0.05284523963928223,
							-0.05407634377479553,
							-0.2280372679233551,
							0.06540451943874359,
							0.05148279666900635,
							-0.1044933944940567,
							-0.31805121898651123
						]
					],
					"duration": 1.2172408999977051
				}
            ]
        }
    }


@api.get("/", tags=["root"])
def read_root():
	return {"message": "archiproducts.ai!"}


@api.post("/clip-embed", response_model=Output)
def get_embeddings(inputs:Inputs, request: Request):
	"""
    Get embeddings vector form input text or image.
    Args:
        input_data (Inputs): Oggetto contain text or image.
    Returns:
        dict: result containing the embeddings.
    """
	return clipApp.infer(inputs.__dict__)
	
@api.post("/e5-embed", response_model=Output)
def get_embeddings(inputs:Inputs, request: Request):
	"""
    Get embeddings vector form input text or image.
    Args:
        input_data (Inputs): Oggetto contain text.
    Returns:
        dict: result containing the embeddings.
    """
	return e5App.infer(inputs.__dict__)

if __name__ == "__main__":
	uvicorn.run(api, host='127.0.0.1', port=7860)
	# uvicorn.run(app="main:api", host='127.0.0.1', port=8000)
